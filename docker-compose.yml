version: "3.8"
services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx_proxy
    depends_on:
      - app
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - mainnet

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: my_app
    ports:
      - "3000:3000"
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: ${db_name}
      POSTGRES_USER: ${db_user}
      POSTGRES_PASSWORD: ${db_password}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - db
      - redis
    networks:
      - mainnet

  db:
    image: postgres:14-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${db_user}
      POSTGRES_PASSWORD: ${db_password}
      POSTGRES_DB: ${db_name}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d 
    networks:
      - mainnet
  volumes:
    db_data:

  redis:
    image: redis:6-alpine
    container_name: redis_cache
    networks:
      - mainnet

 scraper:
    image: python:3.11
    container_name: sam_scraper
    volumes:
      - ./Sam_Opp:/app/scripts
      - ./SamDataOut:/app/data
    working_dir: /app/scripts
    command: ["sleep", "infinity"]  # Prevents auto-run
    environment:
      SAM_API_KEY: ${SAM_API_KEY}
      POSTGRES_HOST: db
      POSTGRES_DB: ${db_name}
      POSTGRES_USER: ${db_user}
      POSTGRES_PASSWORD: ${db_password}
    depends_on:
      - db
    networks:
      - mainnet

volumes:
  db_data:

networks:
  mainnet:
